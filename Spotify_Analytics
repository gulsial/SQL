#In this project, I downloaded Spotify data from Keggle.
# Then I created a table to insert the Spotify data into.
# Finally, I performed analytics on the data using SQL by coming up with interesting questions. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

SELECT * FROM BIT_DB.spotifydata 

#1. Which artist has the most popular songs?
SELECT artist_name, AVG(popularity) FROM BIT_DB.Spotifydata
ORDER BY popularity DESC 
LIMIT 1;

#2. What is the longest song in the playlist?
SELECT track_name FROM BIT_DB.Spotifydata HAVING MAX(duration_ms) 
LIMIT 1;

#3. How many songs does Justin Bieber have in the playlist?
SELECT COUNT(id) FROM BIT_DB.Spotifydata WHERE artist_name = 'Justin Bieber';

#4. What is the average danceability of Ed Sheeran?
SELECT AVG(danceability) FROM BIT_DB.Spotifydata WHERE artist_name = 'Ed Sheeran';

#5. Calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH CTEtable AS (SELECT SD.artist_name, AVG(SD.popularity) AS average_popularity
FROM Spotifydata SD
GROUP BY SD.artist_name)
SELECT artist_name, average_popularity, 'Top Star' as tag
FROM CTEtable
WHERE average_popularity > 90;
